#compdef pprof

# zsh completions for 'pprof'
# automatically generated with http://github.com/RobSis/zsh-completion-generator
local arguments

arguments=(
    '-callgrind[Outputs a graph in callgrind format]'
    '-comments[Output all profile comments]'
    '-disasm[Output assembly listings annotated with samples]'
    '-dot[Outputs a graph in DOT format]'
    '-eog[Visualize graph through eog]'
    '-evince[Visualize graph through evince]'
    '-gif[Outputs a graph image in GIF format]'
    '-gv[Visualize graph through gv]'
    '-kcachegrind[Visualize report in KCachegrind]'
    '-list[Output annotated source for functions matching regexp]'
    '-pdf[Outputs a graph in PDF format]'
    '-peek[Output callers/callees of functions matching regexp]'
    '-png[Outputs a graph image in PNG format]'
    '-proto[Outputs the profile in compressed protobuf format]'
    '-ps[Outputs a graph in PS format]'
    '-raw[Outputs a text representation of the raw profile]'
    '-svg[Outputs a graph in SVG format]'
    '-tags[Outputs all tags in the profile]'
    '-text[Outputs top entries in text form]'
    '-top[Outputs top entries in text form]'
    '-topproto[Outputs top entries in compressed protobuf format]'
    '-traces[Outputs all profile samples in text form]'
    '-tree[Outputs a text rendering of call graph]'
    '-web[Visualize graph through web browser]'
    '-weblist[Display annotated source in a web browser]'
    '-call[_tree       Create a context-sensitive call tree]'
    '-compact[_labels  Show minimal headers]'
    '-divide[_by       Ratio to divide all samples before visualization]'
    '-drop[_negative   Ignore negative differences]'
    '-edgefraction[Hide edges below <f>*total]'
    '-focus[Restricts to samples going through a node matching regexp]'
    '-hide[Skips nodes matching regexp]'
    '-ignore[Skips paths going through any nodes matching regexp]'
    '-mean[Average sample value over first value (count)]'
    '-nodecount[Max number of nodes to show]'
    '-nodefraction[Hide nodes below <f>*total]'
    '-normalize[Scales profile based on the base profile.]'
    '-output[Output filename for file-based outputs]'
    '-positive[_percentages Ignore negative samples when computing percentages]'
    '-prune[_from      Drops any functions below the matched frame.]'
    '-relative[_percentages Show percentages relative to focused subgraph]'
    '-sample[_index    Sample value to report (0-based index or name)]'
    '-show[Only show nodes matching regexp]'
    '-source[_path     Search path for source files]'
    '-tagfocus[Restricts to samples with tags in range or matched by regexp]'
    '-taghide[Skip tags matching this regexp]'
    '-tagignore[Discard samples with tags in range or matched by regexp]'
    '-tagshow[Only consider tags matching this regexp]'
    '-trim[Honor nodefraction/edgefraction/nodecount defaults]'
    '-unit[Measurement units to display]'
    '-cum[Sort entries based on cumulative weight]'
    '-flat[Sort entries based on own weight]'
    '-addresses[Aggregate at the function level.]'
    '-addressnoinlines[at the function level, including functions addresses in the output.]'
    '-files[Aggregate at the file level.]'
    '-functions[Aggregate at the function level.]'
    '-lines[Aggregate at the source code line level.]'
    '-noinlines[Aggregate at the function level.]'
    '-seconds[Duration for time-based profile collection]'
    '-timeout[Timeout in seconds for profile collection]'
    '-buildid[Override build id for main binary]'
    '-add[_comment          Free-form annotation to add to the profile]'
    '-base[Source of profile to use as baseline]'
    '-symbolize[Controls source of symbol information]'
    '-http[Provide web based interface at host:port.]'
    '-tools[Search path for object tools]'
    '-inuse[_space           Same as -sample_index=inuse_space]'
    '-inuse[_objects         Same as -sample_index=inuse_objects]'
    '-alloc[_space           Same as -sample_index=alloc_space]'
    '-alloc[_objects         Same as -sample_index=alloc_objects]'
    '-total[_delay           Same as -sample_index=delay]'
    '-contentions[Same as -sample_index=contentions]'
    '-mean[_delay            Same as -mean -sample_index=delay]'
    '*:filename:_files'
)

_arguments -s $arguments
