kill_grep() {
    # Usage: kill_grep.sh MY_APP_NAME
    # Will kill anything that has MY_APP_NAME in their name
    ps aux | grep $1 | grep -v -e "grep.*$1" | grep `whoami` | grep -v "$0 $1" |  awk '{print $2}' | xargs kill -9
}

md5dir() {
    find $1/ -type f -exec md5sum {} + | awk '{print $1}' | sort | md5sum
}

gocd () {
        local targetlist=$(tree --noreport -f -L 3 -d -i $GOPATH/src/ )
        if [[ -z "$targetlist" ]]
        then
                echo "Could not find any packages"
                return
        fi
        if [[ "$1" ]]
        then
                cd $(echo $targetlist | peco --query $1)
                return
        else
                cd $(echo $targetlist | peco )
        fi
}

reset_iptables() {

    sudo iptables -P INPUT   ACCEPT
    sudo iptables -P OUTPUT  ACCEPT
    sudo iptables -P FORWARD ACCEPT
    sudo iptables -F
    sudo iptables -X

    for table in filter nat mangle; do
        sudo iptables -t $table -F
        sudo iptables -t $table -X
        sudo iptables -t $table -Z
    done
}

dcleanup(){
	docker rm -v $(docker ps --filter status=exited -q 2>/dev/null) 2>/dev/null
	docker rmi $(docker images --filter dangling=true -q 2>/dev/null) 2>/dev/null
}

del_stopped(){
	local name=$1
	local state=$(docker inspect --format "{{.State.Running}}" $name 2>/dev/null)

	if [[ "$state" == "false" ]]; then
		docker rm $name
	fi
}

docker-gimp(){
	del_stopped gimp
	xhost local:arsham

	docker run -it \
		-v /etc/localtime:/etc/localtime:ro \
		-v /tmp/.X11-unix:/tmp/.X11-unix \
		-e DISPLAY=unix$DISPLAY \
		-v $HOME/Pictures:/root/Pictures \
		-v $HOME/.gtkrc:/root/.gtkrc \
		-e GDK_SCALE \
		-e GDK_DPI_SCALE \
		--name gimp \
		jess/gimp
}

tor-browser() {
	del_stopped tor-browser
	xhost local:arsham


	docker run -it \
		-v /tmp/.X11-unix:/tmp/.X11-unix \
		-e DISPLAY=unix$DISPLAY \
		-v /dev/snd:/dev/snd --privileged \
		--name tor-browser \
		jess/tor-browser
}
