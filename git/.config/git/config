[color]
  ui = true
  pager = no
[user]
  email = arshamshirvani@gmail.com
  name = Arsham Shirvani
  signingkey = CD1DF4EEAA9655CE99B991EFBB208F95160CE40E
[core]
  excludesfile = ~/.config/git/ignore
  editor = nvim
  pager = nvim -R -c 'set ft=git foldmethod=syntax | nnoremap q :q<CR>'
[push]
  default = simple
[alias]
  # CORE
  st = status
  co = checkout
  aliases = "!git config -l | grep alias | cut -c 7-"

  # TOOLS
  # Commit staged changes with WIP title.
  wip = commit --no-gpg-sign -am "WIP"
  # Commit the dirt as a save point.
  save = "!f() { git add -A && DATE=$(date +'%Y-%m-%d-%H-%M-%S') git commit --no-gpg-sign -m \"SAVEPOINT $(date +'%Y-%m-%d %H:%M:%S')\";}; f"
  # Undo last commit, keep the changes as dirt.
  undo = reset HEAD~1 --mixed
  # wipe will create an untracked commit in case later you want to find it # from reflogs.
  wipe = !git add -A && git commit -qm 'WIPE SAVEPOINT' && git reset HEAD~1 --hard
  diff-json = !git -c diff.default.textconv=\"`git config diff.json.textconv`\" diff
  root = !pwd

  # Creates a patch from the result of a merge, without applying it.
  # Usage: git merge-patch feature/example..master > <name.patch>
  # Apply with: git apply -3 <name.patch>
  merge-patch = log --patch --reverse --binary --pretty=email --stat -m --first-parent --full-index
  # Print the commit diff in form of a patch that can be applied.
  commit-patch = !git log --patch --pretty=email --stat -m --first-parent $1~..$1

  # STATS
  ls = "log --pretty=format:"%C(yellow)%h%Cred%d\\ %Creset%s%Cblue\\ [%cn]" --decorate"
  lg = log --graph --abbrev-commit --decorate --all --date-order \
           --format=format:'%C(bold blue)%h%C(reset) - %C(bold green)(%ar)%C(reset) %C(white)%s%C(reset) %C(dim white)- <%an>%C(reset)%C(bold yellow)%d%C(reset)'
  # Show conflict-only diff patches.
  conflicts = diff --diff-filter=U
  conflict-files = "!git conflicts --name-only"
  ignored = !git ls-files --others --i --exclude-standard
  latest-tag = describe --tags --abbrev=0

  # PULL REQUESTS
  # file stats which have changed since given branch (empty defaults to master).
  pr-stat = !git --no-pager diff --stat $(git merge-base HEAD ${1:-master})
  pr-files = !git --no-pager diff --name-only $(git merge-base HEAD ${1:-master})
  # open the changed files for review.
  pr-review = !nvim -p $(git pr-files) +\"tabdo Gvdiff ${1:-master}\"
  pr-reviewone = !nvim -p +\"tabdo Gvdiff ${1:-master}\"
[http]
  sslVerify = true
[gpg]
  program = gpg2
[commit]
  gpgSign = true
  template = ~/.config/git/message
[url "git@github.com:"]
  insteadOf = https://github.com/
[pull]
  rebase = false
[diff]
  wsErrorHighlight = all
  tool = vimdiff
  algorithm = patience
  indentHeuristic = true
[difftool]
  prompt = false
  trustExitCode = true
[difftool "nvimdiff"]
  cmd = "nvim -d \"$LOCAL\" \"$REMOTE\""
[merge]
  tool = nvim
  conflictstyle = zdiff3
[mergetool]
  prompt = false
  keepBackup = false
  trustExitCode = true
  writeToTemp = true
[mergetool "nvim"]
  cmd = "nvim -d -c \"wincmd l\" \"$LOCAL\" \"$MERGED\" \"$REMOTE\""
[mergetool "vimdiff"]
  path = nvim
[difftool "vimdiff3"]
  path = nvim
[github]
  user = arsham
[fetch]
  prune = true
[diff "json"]
  textconv = gojq '.' $1
[remote "origin"]
  prune = true
[tag]
	sort = version:refname
[versionsort]
	suffix = -
