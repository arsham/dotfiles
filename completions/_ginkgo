#compdef ginkgo

# zsh completions for 'ginkgo'
# automatically generated with http://github.com/RobSis/zsh-completion-generator
local arguments

arguments=(
    '-a[Force rebuilding of packages that are already up-to-date.]'
    '-afterSuiteHook[Run a command when a suite test run completes]'
    '-asmflags[Arguments to pass on each go tool asm invocation.]'
    '-blockprofilerate[Control the detail provided in goroutine blocking profiles by calling runtime.SetBlockProfileRate with the given value. (default 1)]'
    '-buildmode[Build mode to use. See go help buildmode for more.]'
    '-compiler[Name of compiler to use, as in runtime.Compiler (gccgo or gc).]'
    '-compilers[The number of concurrent compilations to run (0 will autodetect)]'
    '-cover[Run tests with coverage analysis, will generate coverage profiles with the package name in the current directory.]'
    '-covermode[Set the mode for coverage analysis.]'
    '-coverpkg[Run tests with coverage on the given external modules.]'
    '-coverprofile[Write a coverage profile to the specified file after all tests have passed.]'
    '-cpuprofile[Write a CPU profile to the specified file before exiting.]'
    '-dryRun[If set, ginkgo will walk the test hierarchy without actually running anything.  Best paired with -v.]'
    '-failFast[If set, ginkgo will stop running a test suite after a failure occurs.]'
    '-failOnPending[If set, ginkgo will mark the test suite as failed if any specs are pending.]'
    '-flakeAttempts[Make up to this many attempts to run each spec. Please note that if any of the attempts succeed, the suite will not be failed. But any failures will still be recorded. (default 1)]'
    '-focus[If set, ginkgo will only run specs that match this regular expression.]'
    '-gccgoflags[Arguments to pass on each gccgo compiler/linker invocation.]'
    '-gcflags[Arguments to pass on each go tool compile invocation.]'
    '-installsuffix[A suffix to use in the name of the package installation directory.]'
    '-keepGoing[When true, failures from earlier test suites do not prevent later test suites from running]'
    '-ldflags[Arguments to pass on each go tool link invocation.]'
    '-linkshared[Link against shared libraries previously created with -buildmode=shared.]'
    '-memprofile[Write a memory profile to the specified file after all tests have passed.]'
    '-memprofilerate[Enable more precise (and expensive) memory profiles by setting runtime.MemProfileRate.]'
    '-msan[Enable interoperation with memory sanitizer.]'
    '-n[test]'
    '-noColor[If set, suppress color output in default reporter.]'
    '-nodes[The number of parallel test nodes to run (default 1)]'
    '-noisyPendings[If set, default reporter will shout about pending tests. (default true)]'
    '-notify[Send desktop notifications when a test run completes]'
    '-outputdir[Place output files from profiling in the specified directory.]'
    '-p[Run in parallel with auto-detected number of nodes]'
    '-pkgdir[install and load all packages from the given dir instead of the usual locations.]'
    '-progress[If set, ginkgo will emit progress information as each spec runs to the GinkgoWriter.]'
    '-r[Find and run test suites under the current directory recursively.]'
    '-race[Run tests with race detection enabled.]'
    '-randomizeAllSpecs[If set, ginkgo will randomize all specs together.  By default, ginkgo only randomizes the top level Describe/Context groups.]'
    '-randomizeSuites[When true, Ginkgo will randomize the order in which test suites run]'
    '-regexScansFilePath[If set, ginkgo regex matching also will look at the file path (code location).]'
    '-requireSuite[Fail if there are ginkgo tests in a directory but no test suite (missing RunSpecs)]'
    '-seed[The seed used to randomize the spec suite. (default 1521150629)]'
    '-skip[If set, ginkgo will only run specs that do not match this regular expression.]'
    '-skipMeasurements[If set, ginkgo will skip any measurement specs.]'
    '-skipPackage[A comma-separated list of package names to be skipped.  If any part of the packages path matches, that package is ignored.]'
    '-slowSpecThreshold[(in seconds) Specs that take longer to run than this threshold are flagged as slow by the default reporter. (default 5)]'
    '-stream[stream parallel test output in real time: less coherent, but useful for debugging]'
    '-succinct[If set, default reporter prints out a very succinct report]'
    '-tags[A list of build tags to consider satisfied during the build.]'
    '-timeout[Suite fails if it does not complete within the specified timeout (default 24h0m0s)]'
    '-toolexec[a program to use to invoke toolchain programs like vet and asm.]'
    '-trace[If set, default reporter prints out the full stack trace when a failure occurs]'
    '-untilItFails[When true, Ginkgo will keep rerunning tests until a failure occurs]'
    '-v[If set, default reporter print out all specs as they begin.]'
    '-work[Print the name of the temporary work directory and do not delete it when exiting.]'
    '-x[test]'
    '*:filename:_files'
)

_arguments -s $arguments
