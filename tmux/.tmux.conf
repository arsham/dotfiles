# Sets the prefix key to "ctrl+s" for convenient
# Cheat sheet:
# -n: alias for -T root. Means without prefix.
# -g: global
# -r: repeatable
# :lsb : prints yank buffers
# :~ : shows message log
# To start a second server: tmux -L new-socket
# To get sizes: tmux list-windows -F "#{window_name} #{window_layout}"
# Also see https://www.seanh.cc/2020/12/28/binding-keys-in-tmux/

unbind C-b
set -g prefix 'C-s'
bind 'C-s' send-prefix

set -g @plugin    'jimeh/tmux-themepack'
set -g @themepack 'double/magenta'

set -g @plugin 'xamut/tmux-weather'
set -g @plugin 'xamut/tmux-network-bandwidth'
set-option -g status-right "#{weather}"
set-option -g @tmux-weather-location "London"
set-option -g @tmux-network-bandwidth-padding 9

set -g renumber-windows on
set -g history-limit 1000000
set -g set-titles on
set -g set-titles-string '#H:#S.#I.#P #W #T'
set -g set-titles on
set -g set-titles-string '#h ❐ #S ● #I #W'

set-window-option -g xterm-keys on
set -g default-terminal "screen-256color"
set -ga terminal-overrides ",*256col*:Tc"

# VI mode
set-window-option -g mode-keys vi

# Automatically set the window title to current path location.
set -g status-interval 2
set -g automatic-rename on
set -g automatic-rename-format '#{b:pane_current_path}'
set -g window-status-format '#I:#(pwd="#{pane_current_path}"; echo ${pwd####*/})#F'
set -g window-status-current-format '#I:#(pwd="#{pane_current_path}"; echo ${pwd####*/})#F'

setw -g  pane-base-index 1
set  -sg repeat-time  500
set  -s  escape-time  10
set  -s  focus-events on
set  -g  base-index   1

# reload config
bind r source-file ~/.tmux.conf \; display-message "Config reloaded..."

bind -r S choose-tree  -swZ
bind -r v split-window -h # Split panes horizontal
bind -r s split-window -v # Split panes vertically

# Join two panes into one window
bind j choose-window 'join-pane -h -s "%%"'
bind J choose-window 'join-pane -s "%%"'

# moving windows with prefix, shift+left/right
bind S-Left  swap-window -t -1
bind S-Right swap-window -t +1

bind > swap-pane -D
bind < swap-pane -U

# Mark a pane, then initiate this to swap them.
bind Enter swap-pane
# Equals to the following:
# bind Enter if "#{=:#{pane_mark_set,1}}" swap-pane

# navigating windows, shift+left/right
bind -n S-Left  previous-window
bind -n S-Right next-window

# Smart pane switching with fzf
is_vim="ps -o state= -o comm= -t '#{pane_tty}'   | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"
is_fzf="ps -o state= -o comm= -t '#{pane_tty}'   | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?fzf$'"
bind -n C-h run "($is_vim && tmux send-keys C-h) || tmux select-pane -L"
bind -n C-j run "($is_vim && tmux send-keys C-j) || ($is_fzf && tmux send-keys C-j) || tmux select-pane -D"
bind -n C-k run "($is_vim && tmux send-keys C-k) || ($is_fzf && tmux send-keys C-k) || tmux select-pane -U"
bind -n C-l run "($is_vim && tmux send-keys C-l) || tmux select-pane -R"
bind -n 'C-\' if-shell "$is_vim" "send-keys C-\\" "select-pane -l"

bind -n 'M-Left'  if-shell "$is_vim" 'send-keys M-Left'  'resize-pane -L 1'
bind -n 'M-Down'  if-shell "$is_vim" 'send-keys M-Down'  'resize-pane -D 1'
bind -n 'M-Up'    if-shell "$is_vim" 'send-keys M-Up'    'resize-pane -U 1'
bind -n 'M-Right' if-shell "$is_vim" 'send-keys M-Right' 'resize-pane -R 1'

bind -T copy-mode-vi M-h resize-pane -L 1
bind -T copy-mode-vi M-j resize-pane -D 1
bind -T copy-mode-vi M-k resize-pane -U 1
bind -T copy-mode-vi M-l resize-pane -R 1

bind -r C-h resize-pane -L 1
bind -r C-j resize-pane -D 1
bind -r C-k resize-pane -U 1
bind -r C-l resize-pane -R 1

bind -T copy-mode 'v' send -X begin-selection
# Copy selected text to the clipboard. You need xsel package installed.
# bind -T copy-mode y copy-selection ; send-keys -X copy-pipe-and-cancel "xsel -i -p && xsel -o -p | xsel -i -b"
# xsel -o writes the selection into standard output.
bind C-y run "xsel -o | tmux load-buffer - ; tmux paste-buffer"
bind -T copy-mode-vi 'y' send -X copy-selection
bind -T copy-mode-vi 'a' send -X append-selection

bind \` switch-client -t'{marked}'

# Ctrl+F11 to toggle the status bar.
bind -n C-F11 set -g status
bind -n M-g display-popup -E "tmux new-session -A -s scratch"

if "test ! -d ~/.tmux/plugins/tpm" \
   "run 'git clone https://github.com/tmux-plugins/tpm ~/.tmux/plugins/tpm && ~/.tmux/plugins/tpm/bin/install_plugins'"

# Initialize TMUX plugin manager (keep this line at the very bottom of tmux.conf)
run '~/.tmux/plugins/tpm/tpm'
